from __future__ import absolute_import, division, print_function
__metaclass__ = type

class ModuleDocFragment(object):
    DOCUMENTATION = '\n\noptions:\n    ad_user:\n        description:\n            - Active Directory username. Use when authenticating with an Active Directory user rather than service\n              principal.\n        type: str\n    password:\n        description:\n            - Active Directory user password. Use when authenticating with an Active Directory user rather than service\n              principal.\n        type: str\n    profile:\n        description:\n            - Security profile found in ~/.azure/credentials file.\n        type: str\n    subscription_id:\n        description:\n            - Your Azure subscription Id.\n        type: str\n    client_id:\n        description:\n            - Azure client ID. Use when authenticating with a Service Principal.\n        type: str\n    secret:\n        description:\n            - Azure client secret. Use when authenticating with a Service Principal.\n        type: str\n    tenant:\n        description:\n            - Azure tenant ID. Use when authenticating with a Service Principal.\n        type: str\n    cloud_environment:\n        description:\n            - For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud),\n              C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or\n              the C(AZURE_CLOUD_ENVIRONMENT) environment variable.\n        type: str\n        default: AzureCloud\n        version_added: \'0.0.1\'\n    adfs_authority_url:\n        description:\n            - Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.\n        type: str\n        version_added: \'0.0.1\'\n    cert_validation_mode:\n        description:\n            - Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but\n              when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be\n              set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.\n        type: str\n        choices: [ ignore, validate ]\n        version_added: \'0.0.1\'\n    auth_source:\n        description:\n            - Controls the source of the credentials to use for authentication.\n            - Can also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\n            - When set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\n            - When set to C(env), the credentials will be read from the environment variables\n            - When set to C(credential_file), it will read the profile from C(~/.azure/credentials).\n            - When set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable\n              C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default\n              az cli subscription is used.\n            - When set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the\n              environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted\n              access to more than one subscription, otherwise the first subscription is chosen.\n            - The C(msi) was added in Ansible 2.6.\n        type: str\n        default: auto\n        choices:\n        - auto\n        - cli\n        - credential_file\n        - env\n        - msi\n        version_added: \'0.0.1\'\n    api_profile:\n        description:\n        - Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds;\n          future values will allow use with Azure Stack.\n        type: str\n        default: latest\n        version_added: \'0.0.1\'\n    log_path:\n        description:\n            - Parent argument.\n        type: str\n    log_mode:\n        description:\n            - Parent argument.\n        type: str\n    x509_certificate_path:\n        description:\n            - Path to the X509 certificate used to create the service principal in PEM format.\n            - The certificate must be appended to the private key.\n            - Use when authenticating with a Service Principal.\n        type: path\n        version_added: \'1.14.0\'\n    thumbprint:\n        description:\n            - The thumbprint of the private key specified in I(x509_certificate_path).\n            - Use when authenticating with a Service Principal.\n            - Required if I(x509_certificate_path) is defined.\n        type: str\n        version_added: \'1.14.0\'\nrequirements:\n    - python >= 2.7\n    - The host that executes this module must have the azure.azcollection collection installed via galaxy\n    - All python packages listed in collection\'s requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection\n    - Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection\n\nnotes:\n    - For authentication with Azure you can pass parameters, set environment variables, use a profile stored\n      in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\n    - Authentication is also possible using a service principal or Active Directory user.\n    - To authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment\n      variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\n    - To authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and\n      AZURE_PASSWORD in the environment.\n    - "Alternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing\n      a [default] section and the following keys: subscription_id, client_id, secret and tenant or\n      subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile\n      by passing profile or setting AZURE_PROFILE in the environment."\n\nseealso:\n    - name: Sign in with Azure CLI\n      link: https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest\n      description: How to authenticate using the C(az login) command.\n    '