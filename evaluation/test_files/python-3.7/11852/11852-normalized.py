def _class_source(schema, indent):
    """Generate Python source code for one specific class

    Doesn't include or take into account any dependencies between record types
    """
    def_pattern = 'class {class_name}(pyschema.Record):\n{indent}# WARNING: This class was generated by pyschema.to_python_source\n{indent}# there is a risk that any modification made to this class will be overwritten\n{optional_namespace_def}{field_defs}\n'
    if hasattr(schema, '_namespace'):
        optional_namespace_def = '{indent}_namespace = {namespace!r}\n'.format(namespace=schema._namespace, indent=indent)
    else:
        optional_namespace_def = ''
    field_defs = ['{indent}{field_name} = {field!r}'.format(field_name=field_name, field=field, indent=indent) for (field_name, field) in schema._fields.iteritems()]
    if not field_defs:
        field_defs = ['{indent}pass'.format(indent=indent)]
    return def_pattern.format(class_name=schema._schema_name, optional_namespace_def=optional_namespace_def, field_defs='\n'.join(field_defs), indent=indent)