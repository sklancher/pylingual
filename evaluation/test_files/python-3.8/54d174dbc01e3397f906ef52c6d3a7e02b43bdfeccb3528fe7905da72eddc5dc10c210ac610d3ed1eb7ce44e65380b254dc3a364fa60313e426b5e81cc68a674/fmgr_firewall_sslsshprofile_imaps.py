from __future__ import absolute_import, division, print_function
__metaclass__ = type
ANSIBLE_METADATA = {'status': ['preview'], 'supported_by': 'community', 'metadata_version': '1.1'}
DOCUMENTATION = '\n---\nmodule: fmgr_firewall_sslsshprofile_imaps\nshort_description: no description\ndescription:\n    - This module is able to configure a FortiManager device.\n    - Examples include all parameters and values which need to be adjusted to data sources before usage.\n\nversion_added: "1.0.0"\nauthor:\n    - Link Zheng (@chillancezen)\n    - Jie Xue (@JieX19)\n    - Frank Shen (@fshen01)\n    - Hongbin Lu (@fgtdev-hblu)\nnotes:\n    - Running in workspace locking mode is supported in this FortiManager module, the top\n      level parameters workspace_locking_adom and workspace_locking_timeout help do the work.\n    - To create or update an object, use state present directive.\n    - To delete an object, use state absent directive.\n    - Normally, running one module can fail when a non-zero rc is returned. you can also override\n      the conditions to fail or succeed with parameters rc_failed and rc_succeeded\n\noptions:\n    enable_log:\n        description: Enable/Disable logging for task\n        required: false\n        type: bool\n        default: false\n    proposed_method:\n        description: The overridden method for the underlying Json RPC request\n        required: false\n        type: str\n        choices:\n          - update\n          - set\n          - add\n    bypass_validation:\n        description: |\n          only set to True when module schema diffs with FortiManager API structure,\n           module continues to execute without validating parameters\n        required: false\n        type: bool\n        default: false\n    workspace_locking_adom:\n        description: |\n          the adom to lock for FortiManager running in workspace mode, the value can be global and others including root\n        required: false\n        type: str\n    workspace_locking_timeout:\n        description: the maximum time in seconds to wait for other user to release the workspace lock\n        required: false\n        type: int\n        default: 300\n    state:\n        description: the directive to create, update or delete an object\n        type: str\n        required: true\n        choices:\n          - present\n          - absent\n    rc_succeeded:\n        description: the rc codes list with which the conditions to succeed will be overriden\n        type: list\n        required: false\n    rc_failed:\n        description: the rc codes list with which the conditions to fail will be overriden\n        type: list\n        required: false\n    adom:\n        description: the parameter (adom) in requested url\n        type: str\n        required: true\n    ssl-ssh-profile:\n        description: the parameter (ssl-ssh-profile) in requested url\n        type: str\n        required: true\n    firewall_sslsshprofile_imaps:\n        description: the top level parameters set\n        required: false\n        type: dict\n        suboptions:\n            allow-invalid-server-cert:\n                type: str\n                description: no description\n                choices:\n                    - \'disable\'\n                    - \'enable\'\n            client-cert-request:\n                type: str\n                description: no description\n                choices:\n                    - \'bypass\'\n                    - \'inspect\'\n                    - \'block\'\n            ports:\n                description: description\n                type: int\n            status:\n                type: str\n                description: no description\n                choices:\n                    - \'disable\'\n                    - \'deep-inspection\'\n            unsupported-ssl:\n                type: str\n                description: no description\n                choices:\n                    - \'bypass\'\n                    - \'inspect\'\n                    - \'block\'\n            untrusted-cert:\n                type: str\n                description: no description\n                choices:\n                    - \'allow\'\n                    - \'block\'\n                    - \'ignore\'\n            invalid-server-cert:\n                type: str\n                description: no description\n                choices:\n                    - \'allow\'\n                    - \'block\'\n            sni-server-cert-check:\n                type: str\n                description: no description\n                choices:\n                    - \'disable\'\n                    - \'enable\'\n                    - \'strict\'\n            untrusted-server-cert:\n                type: str\n                description: no description\n                choices:\n                    - \'allow\'\n                    - \'block\'\n                    - \'ignore\'\n            cert-validation-failure:\n                type: str\n                description: no description\n                choices:\n                    - \'allow\'\n                    - \'block\'\n                    - \'ignore\'\n            cert-validation-timeout:\n                type: str\n                description: no description\n                choices:\n                    - \'allow\'\n                    - \'block\'\n                    - \'ignore\'\n            client-certificate:\n                type: str\n                description: no description\n                choices:\n                    - \'bypass\'\n                    - \'inspect\'\n                    - \'block\'\n            expired-server-cert:\n                type: str\n                description: no description\n                choices:\n                    - \'allow\'\n                    - \'block\'\n                    - \'ignore\'\n            proxy-after-tcp-handshake:\n                type: str\n                description: no description\n                choices:\n                    - \'disable\'\n                    - \'enable\'\n            revoked-server-cert:\n                type: str\n                description: no description\n                choices:\n                    - \'allow\'\n                    - \'block\'\n                    - \'ignore\'\n            unsupported-ssl-cipher:\n                type: str\n                description: no description\n                choices:\n                    - \'allow\'\n                    - \'block\'\n            unsupported-ssl-negotiation:\n                type: str\n                description: no description\n                choices:\n                    - \'allow\'\n                    - \'block\'\n            unsupported-ssl-version:\n                type: str\n                description: no description\n                choices:\n                    - \'block\'\n                    - \'allow\'\n                    - \'inspect\'\n\n'
EXAMPLES = '\n - hosts: fortimanager-inventory\n   collections:\n     - fortinet.fortimanager\n   connection: httpapi\n   vars:\n      ansible_httpapi_use_ssl: True\n      ansible_httpapi_validate_certs: False\n      ansible_httpapi_port: 443\n   tasks:\n    - name: no description\n      fmgr_firewall_sslsshprofile_imaps:\n         bypass_validation: False\n         workspace_locking_adom: <value in [global, custom adom including root]>\n         workspace_locking_timeout: 300\n         rc_succeeded: [0, -2, -3, ...]\n         rc_failed: [-2, -3, ...]\n         adom: <your own value>\n         ssl-ssh-profile: <your own value>\n         firewall_sslsshprofile_imaps:\n            allow-invalid-server-cert: <value in [disable, enable]>\n            client-cert-request: <value in [bypass, inspect, block]>\n            ports: <value of integer>\n            status: <value in [disable, deep-inspection]>\n            unsupported-ssl: <value in [bypass, inspect, block]>\n            untrusted-cert: <value in [allow, block, ignore]>\n            invalid-server-cert: <value in [allow, block]>\n            sni-server-cert-check: <value in [disable, enable, strict]>\n            untrusted-server-cert: <value in [allow, block, ignore]>\n            cert-validation-failure: <value in [allow, block, ignore]>\n            cert-validation-timeout: <value in [allow, block, ignore]>\n            client-certificate: <value in [bypass, inspect, block]>\n            expired-server-cert: <value in [allow, block, ignore]>\n            proxy-after-tcp-handshake: <value in [disable, enable]>\n            revoked-server-cert: <value in [allow, block, ignore]>\n            unsupported-ssl-cipher: <value in [allow, block]>\n            unsupported-ssl-negotiation: <value in [allow, block]>\n            unsupported-ssl-version: <value in [block, allow, inspect]>\n\n'
RETURN = '\nrequest_url:\n    description: The full url requested\n    returned: always\n    type: str\n    sample: /sys/login/user\nresponse_code:\n    description: The status of api request\n    returned: always\n    type: int\n    sample: 0\nresponse_message:\n    description: The descriptive message of the api response\n    type: str\n    returned: always\n    sample: OK.\n\n'
from ansible.module_utils.basic import AnsibleModule
from ansible.module_utils.connection import Connection
from ansible_collections.fortinet.fortimanager.plugins.module_utils.napi import NAPIManager
from ansible_collections.fortinet.fortimanager.plugins.module_utils.napi import check_galaxy_version
from ansible_collections.fortinet.fortimanager.plugins.module_utils.napi import check_parameter_bypass

def main():
    jrpc_urls = ['/pm/config/adom/{adom}/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/imaps', '/pm/config/global/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/imaps']
    perobject_jrpc_urls = ['/pm/config/adom/{adom}/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/imaps/{imaps}', '/pm/config/global/obj/firewall/ssl-ssh-profile/{ssl-ssh-profile}/imaps/{imaps}']
    url_params = ['adom', 'ssl-ssh-profile']
    module_primary_key = None
    module_arg_spec = {'enable_log': {'type': 'bool', 'required': False, 'default': False}, 'forticloud_access_token': {'type': 'str', 'required': False, 'no_log': True}, 'proposed_method': {'type': 'str', 'required': False, 'choices': ['set', 'update', 'add']}, 'bypass_validation': {'type': 'bool', 'required': False, 'default': False}, 'workspace_locking_adom': {'type': 'str', 'required': False}, 'workspace_locking_timeout': {'type': 'int', 'required': False, 'default': 300}, 'rc_succeeded': {'required': False, 'type': 'list'}, 'rc_failed': {'required': False, 'type': 'list'}, 'adom': {'required': True, 'type': 'str'}, 'ssl-ssh-profile': {'required': True, 'type': 'str'}, 'firewall_sslsshprofile_imaps': {'required': False, 'type': 'dict', 'revision': {'6.0.0': True, '6.2.1': True, '6.2.3': True, '6.2.5': True, '6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'options': {'allow-invalid-server-cert': {'required': False, 'revision': {'6.0.0': True, '6.2.1': False, '6.2.3': False, '6.2.5': False, '6.4.0': False, '6.4.2': False, '6.4.5': False, '7.0.0': False, '7.2.0': False}, 'choices': ['disable', 'enable'], 'type': 'str'}, 'client-cert-request': {'required': False, 'revision': {'6.0.0': True, '6.2.1': True, '6.2.3': True, '6.2.5': True, '6.4.0': False, '6.4.2': False, '6.4.5': False, '7.0.0': False, '7.2.0': False}, 'choices': ['bypass', 'inspect', 'block'], 'type': 'str'}, 'ports': {'required': False, 'revision': {'6.0.0': True, '6.2.1': True, '6.2.3': True, '6.2.5': True, '6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'type': 'int'}, 'status': {'required': False, 'revision': {'6.0.0': True, '6.2.1': True, '6.2.3': True, '6.2.5': True, '6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['disable', 'deep-inspection'], 'type': 'str'}, 'unsupported-ssl': {'required': False, 'revision': {'6.0.0': True, '6.2.1': True, '6.2.3': True, '6.2.5': True, '6.4.0': False, '6.4.2': False, '6.4.5': False, '7.0.0': False, '7.2.0': False}, 'choices': ['bypass', 'inspect', 'block'], 'type': 'str'}, 'untrusted-cert': {'required': False, 'revision': {'6.0.0': True, '6.2.1': False, '6.2.3': False, '6.2.5': False, '6.4.0': False, '6.4.2': False, '6.4.5': False, '7.0.0': False, '7.2.0': False}, 'choices': ['allow', 'block', 'ignore'], 'type': 'str'}, 'invalid-server-cert': {'required': False, 'revision': {'6.2.1': True, '6.2.3': True, '6.2.5': True, '6.4.0': False, '6.4.2': False, '6.4.5': False, '7.0.0': False, '7.2.0': False}, 'choices': ['allow', 'block'], 'type': 'str'}, 'sni-server-cert-check': {'required': False, 'revision': {'6.2.1': True, '6.2.3': True, '6.2.5': True, '6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['disable', 'enable', 'strict'], 'type': 'str'}, 'untrusted-server-cert': {'required': False, 'revision': {'6.2.1': True, '6.2.3': True, '6.2.5': True, '6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['allow', 'block', 'ignore'], 'type': 'str'}, 'cert-validation-failure': {'required': False, 'revision': {'6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['allow', 'block', 'ignore'], 'type': 'str'}, 'cert-validation-timeout': {'required': False, 'revision': {'6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['allow', 'block', 'ignore'], 'type': 'str'}, 'client-certificate': {'required': False, 'revision': {'6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['bypass', 'inspect', 'block'], 'type': 'str'}, 'expired-server-cert': {'required': False, 'revision': {'6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['allow', 'block', 'ignore'], 'type': 'str'}, 'proxy-after-tcp-handshake': {'required': False, 'revision': {'6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['disable', 'enable'], 'type': 'str'}, 'revoked-server-cert': {'required': False, 'revision': {'6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['allow', 'block', 'ignore'], 'type': 'str'}, 'unsupported-ssl-cipher': {'required': False, 'revision': {'6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['allow', 'block'], 'type': 'str'}, 'unsupported-ssl-negotiation': {'required': False, 'revision': {'6.4.0': True, '6.4.2': True, '6.4.5': True, '7.0.0': True, '7.2.0': True}, 'choices': ['allow', 'block'], 'type': 'str'}, 'unsupported-ssl-version': {'required': False, 'revision': {'7.2.0': True}, 'choices': ['block', 'allow', 'inspect'], 'type': 'str'}}}}
    params_validation_blob = []
    check_galaxy_version(module_arg_spec)
    module = AnsibleModule(argument_spec=check_parameter_bypass(module_arg_spec, 'firewall_sslsshprofile_imaps'), supports_check_mode=False)
    fmgr = None
    if module._socket_path:
        connection = Connection(module._socket_path)
        connection.set_option('enable_log', module.params['enable_log'] if 'enable_log' in module.params else False)
        connection.set_option('forticloud_access_token', module.params['forticloud_access_token'] if 'forticloud_access_token' in module.params else None)
        fmgr = NAPIManager(jrpc_urls, perobject_jrpc_urls, module_primary_key, url_params, module, connection, top_level_schema_name='data')
        fmgr.validate_parameters(params_validation_blob)
        fmgr.process_partial_curd(argument_specs=module_arg_spec)
    else:
        module.fail_json(msg='MUST RUN IN HTTPAPI MODE')
    module.exit_json(meta=module.params)
if __name__ == '__main__':
    main()